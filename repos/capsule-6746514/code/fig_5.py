"ACC summary of each classifier after 10-fold cross validation on the two datasets"
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

Acc0 = 100*np.array([0.951304347826087, 0.9521739130434783, 0.9469565217391305, 0.957391304347826, 0.957391304347826, 0.9452173913043478, 0.9539130434782609, 0.9521739130434783, 0.9460869565217391, 0.9478260869565217])
Acc1 = 100*np.array([0.8817391304347826, 0.88, 0.8878260869565218, 0.8765217391304347, 0.8834782608695653, 0.871304347826087, 0.8817391304347826, 0.8765217391304347, 0.8739130434782608, 0.8634782608695653])
Acc2 = 100*np.array([0.9147826086956522, 0.9269565217391305, 0.9243478260869565, 0.9347826086956522, 0.9391304347826087, 0.9173913043478261, 0.9173913043478261, 0.92, 0.9165217391304348, 0.9260869565217391])
Acc3 = 100*np.array([0.9373913043478261, 0.9452173913043478, 0.948695652173913, 0.9495652173913044, 0.9504347826086956, 0.9382608695652174, 0.9417391304347826, 0.9478260869565217, 0.9356521739130435, 0.9382608695652174])
Acc4 = 100*np.array([0.928695652173913, 0.9382608695652174, 0.9391304347826087, 0.9495652173913044, 0.9434782608695652, 0.8982608695652174, 0.9373913043478261, 0.9356521739130435, 0.9165217391304348, 0.922608695652174])
Acc5 = 100*np.array([0.9617391304347827, 0.9782608695652174, 0.971304347826087, 0.9695652173913043, 0.9765217391304348, 0.9756521739130435, 0.9747826086956521, 0.9678260869565217, 0.9791304347826087, 0.9782608695652174])

Acc00 = 100*np.array([0.951304347826087, 0.9521739130434783, 0.9469565217391305, 0.9617391304347827, 0.957391304347826, 0.9452173913043478, 0.9539130434782609, 0.9521739130434783, 0.9443478260869566, 0.9478260869565217])
Acc11 = 100*np.array([0.8808695652173913, 0.8791304347826087, 0.8878260869565218, 0.8765217391304347, 0.8834782608695653, 0.871304347826087, 0.8826086956521739, 0.8782608695652174, 0.8747826086956522, 0.8652173913043478])
Acc22 = 100*np.array([0.9156521739130434, 0.9269565217391305, 0.9243478260869565, 0.9347826086956522, 0.94, 0.9173913043478261, 0.9173913043478261, 0.92, 0.9173913043478261, 0.9252173913043479])
Acc33 = 100*np.array([0.94, 0.9434782608695652, 0.948695652173913, 0.9530434782608695, 0.9460869565217391, 0.9478260869565217, 0.9565217391304348, 0.9452173913043478, 0.9382608695652174, 0.9339130434782609])
Acc44 = 100*np.array([0.948695652173913, 0.9582608695652174, 0.9530434782608695, 0.9582608695652174, 0.9582608695652174, 0.9626086956521739, 0.9652173913043478, 0.8278260869565217, 0.9495652173913044, 0.9373913043478261])
Acc55 = 100*np.array([0.9730434782608696, 0.9765217391304348, 0.9756521739130435, 0.9765217391304348, 0.9730434782608696, 0.9773913043478261, 0.9704347826086956, 0.9686956521739131, 0.9773913043478261, 0.9739130434782609])

import os
results0 = pd.DataFrame({"XGBoost": Acc0, "SVM": Acc1, "DT": Acc2, "RF": Acc3, "GRU": Acc4, "SGRU": Acc5})

plt.figure(dpi=650, figsize=(4, 5))
results0.boxplot()
plt.ylabel('ACC (%)')
plt.xlabel('Classifier')
plt.title('Dataset 1')
plt.grid(ls='--')
plt.savefig(os.path.join('../results/Box.png'), dpi=650)
plt.show()

results1 = pd.DataFrame({"XGBoost": Acc00, "SVM": Acc11, "DT": Acc22, "RF": Acc33, "GRU": Acc44, "SGRU": Acc55})

plt.figure(dpi=650, figsize=(4, 5))
results1.boxplot()
plt.ylabel('ACC (%)')
plt.xlabel('Classifier')
plt.title('Dataset 2')
plt.grid(ls='--')
plt.savefig(os.path.join('../results/Box_1.png'), dpi=650)
plt.show()
